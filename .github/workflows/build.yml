name: CI/CD Pipeline

# Trigger the workflow on push or pull request to the main branch, or on a manual workflow dispatch.
on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'docs/**'
      - 'README.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'docs/**'
      - 'README.md'
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # Define environment variables for the job.
    env:
      NODE_ENV: test

    steps:
      # Check out the repository code.
      - name: Checkout code
        uses: actions/checkout@v3

      # Use Node.js (adjust version as needed)
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # Adjust the Node.js version as needed

      # Set up Docker Buildx for more advanced build capabilities.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Log in to DockerHub using secrets for username and password/token.
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push Docker image for backend
      - name: Build and push backend Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest
          cache-from: type=local,src=/tmp/.buildx-cache-backend
          cache-to: type=local,dest=/tmp/.buildx-cache-backend-new,mode=max

      # Build and push Docker image for frontend
      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
          cache-from: type=local,src=/tmp/.buildx-cache-frontend
          cache-to: type=local,dest=/tmp/.buildx-cache-frontend-new,mode=max

  # Define a job to test the backend, dependent on the build-and-push job completing successfully.
  test-backend:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # Example placeholder for backend test commands
      - name: Placeholder for backend tests
        run: echo "Replace this step with actual backend test commands"

  # Define a job to test the frontend, with a similar setup to the backend testing.
  test-frontend:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # Example placeholder for frontend test commands
      - name: Placeholder for frontend tests
        run: echo "Replace this step with actual frontend test commands"